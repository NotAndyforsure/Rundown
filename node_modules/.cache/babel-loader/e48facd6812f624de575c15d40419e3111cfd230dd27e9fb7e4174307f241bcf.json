{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/repos/rundown/src/contexts/ResultContextProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, createContext, useContext, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire(\"dotenv\").config();\nconsole.log(process.env);\nconst ResultContext = /*#__PURE__*/createContext();\nexport const ResultContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [result, setResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"Andrew Tate\");\n  const baseUrl = useRef(\"\");\n  const options = useRef({});\n  const base = i => {\n    const images = () => {\n      baseUrl.current = `https://bing-image-search1.p.rapidapi.com/images/search?q=${i}`;\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-image-search1.p.rapidapi.com\"\n        }\n      };\n    };\n    const link = () => {\n      baseUrl.current = `https://bing-web-search1.p.rapidapi.com/search?q=${i}&freshness=Day&textFormat=Raw&safeSearch=Off&mkt=en-us`;\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-BingApis-SDK\": \"true\",\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-web-search1.p.rapidapi.com\"\n        }\n      };\n    };\n    const news = () => {\n      baseUrl.current = `https://bing-news-search1.p.rapidapi.com/news/search?q=${i}&safeSearch=Off&textFormat=Raw&freshness=Day`;\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-BingApis-SDK\": \"true\",\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-news-search1.p.rapidapi.com\"\n        }\n      };\n    };\n    const videos = () => {\n      baseUrl.current = `https://bing-video-search1.p.rapidapi.com/videos/search?q=${i}`;\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-video-search1.p.rapidapi.com\"\n        }\n      };\n    };\n    return {\n      images,\n      link,\n      news,\n      videos\n    };\n  };\n  const getResult = async (q, type) => {\n    switch (type) {\n      case \"/search\":\n        base(q).link();\n        break;\n      case \"/images\":\n        base(q).images();\n        break;\n      case \"/news\":\n        base(q).news();\n        break;\n      case \"/videos\":\n        base(q).videos();\n        break;\n      default:\n        break;\n    }\n    setIsLoading(true);\n    const response = await fetch(baseUrl.current, options.current);\n    const data = await response.json();\n    console.log(data);\n    setResult(data);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ResultContext.Provider, {\n    value: {\n      getResult,\n      result,\n      searchTerm,\n      setSearchTerm,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultContextProvider, \"tAH5eob7oX4CHsE4tldj6Fy3ubs=\");\n_c = ResultContextProvider;\nexport const useResultContext = () => {\n  _s2();\n  return useContext(ResultContext);\n};\n_s2(useResultContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ResultContextProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","useRef","jsxDEV","_jsxDEV","require","config","console","log","process","env","ResultContext","ResultContextProvider","_ref","_s","children","result","setResult","isLoading","setIsLoading","searchTerm","setSearchTerm","baseUrl","options","base","i","images","current","method","headers","PRIVATE_KEY","link","news","videos","getResult","q","type","response","fetch","data","json","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useResultContext","_s2","$RefreshReg$"],"sources":["/home/vboxuser/repos/rundown/src/contexts/ResultContextProvider.js"],"sourcesContent":["import React, {useState, createContext, useContext, useRef} from \"react\"\nrequire(\"dotenv\").config()\n\nconsole.log(process.env)\n\nconst ResultContext = createContext()\n\nexport const ResultContextProvider = ({children}) => {\n  const [result, setResult] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchTerm, setSearchTerm] = useState(\"Andrew Tate\")\n  const baseUrl = useRef(\"\")\n  const options = useRef({})\n  const base = (i) => {\n    const images = () => {\n      baseUrl.current = `https://bing-image-search1.p.rapidapi.com/images/search?q=${i}`\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-image-search1.p.rapidapi.com\",\n        },\n      }\n    }\n    const link = () => {\n      baseUrl.current = `https://bing-web-search1.p.rapidapi.com/search?q=${i}&freshness=Day&textFormat=Raw&safeSearch=Off&mkt=en-us`\n\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-BingApis-SDK\": \"true\",\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-web-search1.p.rapidapi.com\",\n        },\n      }\n    }\n    const news = () => {\n      baseUrl.current = `https://bing-news-search1.p.rapidapi.com/news/search?q=${i}&safeSearch=Off&textFormat=Raw&freshness=Day`\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-BingApis-SDK\": \"true\",\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-news-search1.p.rapidapi.com\",\n        },\n      }\n    }\n    const videos = () => {\n      baseUrl.current = `https://bing-video-search1.p.rapidapi.com/videos/search?q=${i}`\n      options.current = {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\": process.env.PRIVATE_KEY,\n          \"X-RapidAPI-Host\": \"bing-video-search1.p.rapidapi.com\",\n        },\n      }\n    }\n\n    return {images, link, news, videos}\n  }\n\n  const getResult = async (q, type) => {\n    switch (type) {\n      case \"/search\":\n        base(q).link()\n\n        break\n      case \"/images\":\n        base(q).images()\n        break\n      case \"/news\":\n        base(q).news()\n        break\n      case \"/videos\":\n        base(q).videos()\n        break\n      default:\n        break\n    }\n\n    setIsLoading(true)\n\n    const response = await fetch(baseUrl.current, options.current)\n\n    const data = await response.json()\n    console.log(data)\n    setResult(data)\n    setIsLoading(false)\n  }\n\n  return (\n    <ResultContext.Provider value={{getResult, result, searchTerm, setSearchTerm, isLoading}}>\n      {children}\n    </ResultContext.Provider>\n  )\n}\n\nexport const useResultContext = () => {\n  return useContext(ResultContext)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}